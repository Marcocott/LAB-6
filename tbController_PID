LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;
USE std.textio.all;

ENTITY tbController_PID IS
END tbController_PID;

ARCHITECTURE file_testing OF tbController_PID IS
	
COMPONENT Controller_PID IS
	PORT (Clk, RSTn, Start : IN STD_LOGIC;
			Data_in : IN SIGNED ( 7 DOWNTO 0);
			Done_sign : OUT STD_LOGIC ;
			Out_MEM_B : OUT SIGNED ( 7 DOWNTO 0 ));
END COMPONENT;

SIGNAL Data_in, Out_MEM_B : signed(7 downto 0);
SIGNAL Clk, RSTn, Start, Done_sign : std_logic;

BEGIN
	
	Clk_proc : process
	begin
		Clk <= '1', '0' after 10 ns;
		wait for 20 ns;
	END process;
	
	RSTn <= '0', '1' after 5 ns;
	
	Start <= '1', '0' after 200 ns;

	process is
	file infile : text open read_mode is "Numeri casuali.txt";
	variable data: integer := 0;
	variable buf: line;
	begin
		wait for 21 ns;
		while not (endfile (infile)) loop
			readline(infile, buf);
			read(buf, data);
			Data_in <= to_signed(data, 8);
			wait for 20 ns;
		end loop;
		wait;
	end process;
			
	process
	file outfile : text open write_mode is "file_out.txt";
	variable data: integer := 0;
	variable buf: line;
	variable cnt: integer := 0;
	begin
		wait for 10598461 ns;
		while (cnt /= 1024) loop
			data := to_integer(Out_MEM_B);
			write(buf, data);
			writeline(outfile, buf);
			cnt := cnt + 1;
			wait for 20 ns;
		end loop;
		wait;
	end process;
	
	-- DEVICE UNDER TEST
	PID_UT : Controller_PID port map ( Clk, RSTn, Start, Data_in, Done_sign, Out_MEM_B );
	
END file_testing;
